library(tidyverse)
plotly_colors <- c('#1f77b4',  # muted blue
'#ff7f0e',  # safety orange
'#2ca02c',  # cooked asparagus green
'#d62728',  # brick red
'#9467bd',  # muted purple
'#8c564b',  # chestnut brown
'#e377c2',  # raspberry yogurt pink
'#7f7f7f',  # middle gray
'#bcbd22',  # curry yellow-green
'#17becf')  # blue-teal
Spec <- readxl::read_xls("~/Documents/NYFED/Spec_US_example.xls")
Spec <- readxl::read_xls("Spec_US_example.xls")
Spec
raw <- readxl::read_xls("Spec_US_example.xls")
raw
raw %>%
dplyr::filter(Model == 0)
raw %>%
dplyr::filter(Model != 0)
colnames(raw)
grep("Block", colnames(raw))
raw[,grep("Block", colnames(raw))]
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0))
Fields <-
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names))
raw <- readxl::read_xls("Spec_US_example.xls")
field_names <-
c("SeriesID", "SeriesName", "Frequency", "Units", "Transformation", "Category")
frequency <-
c("d", "w", "m", "q", "sa", "a")
Spec <- setClass("Spec", slots = list(fields = "tibble", blocks = "tibble"))
Fields <-
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names))
Spec <- setClass("Spec", slots = list(fields = "data.frame", blocks = "data.frame"))
Fields <-
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names))
Fields
Fields$Frequency
sort(Fields$Frequency)
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
arrange("Frequency")
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
arrange(Frequency)
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
mutate(Numeric_Frequency = case_when(
Frequency == "d" ~ 1,
Frequency == "w" ~ 7,
Frequency == "m" ~ 30,
Frequency == "q" ~ 3 * 30,
Frequency == "sa" ~ 6 * 30,
Frequency == "a" ~ 12 * 30,
TRUE ~ NA
))
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
mutate(Numeric_Frequency = case_when(
Frequency == "d" ~ 1,
Frequency == "w" ~ 7,
Frequency == "m" ~ 30,
Frequency == "q" ~ 3 * 30,
Frequency == "sa" ~ 6 * 30,
Frequency == "a" ~ 12 * 30
))
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
mutate(Numeric_Frequency = case_when(
Frequency == "d" ~ 1,
Frequency == "w" ~ 7,
Frequency == "m" ~ 30,
Frequency == "q" ~ 3 * 30,
Frequency == "sa" ~ 6 * 30,
Frequency == "a" ~ 12 * 30
)) %>%
arrange(desc(Numeric_Frequency))
Blocks <-
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0))
Blocks
str_extract(colnames(Blocks), "Block\d-")
str_extract(colnames(Blocks), "Block-")
colnames(Blocks)
str_replace(colnames(Blocks), "Block", "")
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename(~ str_replace(colnames(Blocks), "Block", ""))
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename(str_replace(colnames(Blocks), "Block", ""))
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename_all(str_replace(colnames(Blocks), "Block", ""))
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename_all(~ str_replace(colnames(Blocks), "Block", ""))
spec <- Spec(fields = Fields, blocks = Blocks)
spec$fields
spec@fields
Fields <-
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
mutate(Numeric_Frequency = case_when(
Frequency == "d" ~ 1,
Frequency == "w" ~ 7,
Frequency == "m" ~ 30,
Frequency == "q" ~ 3 * 30,
Frequency == "sa" ~ 6 * 30,
Frequency == "a" ~ 12 * 30
)) %>%
arrange(desc(Numeric_Frequency))
Blocks <-
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename_all(~ str_replace(colnames(Blocks), "Block", ""))
spec <- Spec(fields = Fields, blocks = Blocks)
spec@fields
Fields$Transformation
?str_replace
UnitsTransformed <-
case_when(
Fields$Transformation == "lin" ~ "Levels (No Transformation)"	,
Fields$Transformation == "chg" ~ "Change (Difference)",
Fields$Transformation == "ch1" ~ "Year over Year Change (Difference)",
Fields$Transformation == "pch" ~ "Percent Change",
Fields$Transformation == "pc1" ~ "Year over Year Percent Change",
Fields$Transformation == "pca" ~ "Percent Change (Annual Rate)",
Fields$Transformation == "cch" ~ "Continuously Compunded Rate of Change",
Fields$Transformation == "cca" ~ "Continuously Compounded Annual Rate of Change",
Fields$Transformation == "log" ~ "Natural Log"
)
UnitsTransformed
Spec <- setClass("Spec", slots = list(fields = "data.frame",
blocks = "data.frame",
units  = "character"))
Fields <-
raw %>%
dplyr::filter(Model != 0) %>%
dplyr::select(tidyselect::all_of(field_names)) %>%
mutate(Numeric_Frequency = case_when(
Frequency == "d"  ~ 1,
Frequency == "w"  ~ 7,
Frequency == "m"  ~ 30,
Frequency == "q"  ~ 3 * 30,
Frequency == "sa" ~ 6 * 30,
Frequency == "a"  ~ 12 * 30
)) %>%
arrange(desc(Numeric_Frequency))
UnitsTransformed <-
case_when(
Fields$Transformation == "lin" ~ "Levels (No Transformation)"	,
Fields$Transformation == "chg" ~ "Change (Difference)",
Fields$Transformation == "ch1" ~ "Year over Year Change (Difference)",
Fields$Transformation == "pch" ~ "Percent Change",
Fields$Transformation == "pc1" ~ "Year over Year Percent Change",
Fields$Transformation == "pca" ~ "Percent Change (Annual Rate)",
Fields$Transformation == "cch" ~ "Continuously Compunded Rate of Change",
Fields$Transformation == "cca" ~ "Continuously Compounded Annual Rate of Change",
Fields$Transformation == "log" ~ "Natural Log"
)
Blocks <-
raw[,grep("Block", colnames(raw))] %>%
mutate_if(~ any(is.na(.x)), ~ replace(.x, is.na, 0)) %>%
rename_all(~ str_replace(colnames(Blocks), "Block", ""))
spec <- Spec(fields = Fields, blocks = Blocks, units = UnitsTransformed)
spec@units
